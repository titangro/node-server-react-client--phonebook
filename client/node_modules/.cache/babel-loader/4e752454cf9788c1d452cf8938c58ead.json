{"ast":null,"code":"import axios from 'axios';\nimport { methods, config } from './constants';\nexport class ApiClient {\n  constructor() {\n    this.instance = void 0;\n    this.instance = axios.create(config);\n  }\n\n  request(requestData) {\n    const {\n      url,\n      params,\n      method\n    } = requestData;\n    const currentMethod = methods[method] || methods.default;\n    const config = params && {\n      params\n    };\n    const request = this.instance[currentMethod];\n    return request(url, config);\n  }\n\n}","map":{"version":3,"sources":["/Users/Roman/Documents/Projects/node-test/phonebook/client/src/utils/apiClient/ApiClient.ts"],"names":["axios","methods","config","ApiClient","constructor","instance","create","request","requestData","url","params","method","currentMethod","default"],"mappings":"AAAA,OAAOA,KAAP,MAAwE,OAAxE;AAGA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,aAAhC;AAEA,OAAO,MAAMC,SAAN,CAAgB;AAGdC,EAAAA,WAAP,GAAqB;AAAA,SAFFC,QAEE;AACnB,SAAKA,QAAL,GAAgBL,KAAK,CAACM,MAAN,CAAaJ,MAAb,CAAhB;AACD;;AAEDK,EAAAA,OAAO,CAACC,WAAD,EAA2B;AAChC,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,MAAP;AAAeC,MAAAA;AAAf,QAA0BH,WAAhC;AAEA,UAAMI,aAAkC,GAAGX,OAAO,CAACU,MAAD,CAAP,IAAmBV,OAAO,CAACY,OAAtE;AAEA,UAAMX,MAAM,GAAGQ,MAAM,IAAI;AACvBA,MAAAA;AADuB,KAAzB;AAIA,UAAMH,OAIS,GAAG,KAAKF,QAAL,CAAcO,aAAd,CAJlB;AAMA,WAAOL,OAAO,CAACE,GAAD,EAAMP,MAAN,CAAd;AACD;;AAvBoB","sourcesContent":["import axios, { AxiosInstance, AxiosResponse, AxiosRequestConfig } from 'axios';\n\nimport { RequestData, Method } from './typings';\nimport { methods, config } from './constants';\n\nexport class ApiClient {\n  protected readonly instance: AxiosInstance;\n\n  public constructor() {\n    this.instance = axios.create(config);\n  }\n\n  request(requestData: RequestData) {\n    const { url, params, method } = requestData;\n\n    const currentMethod: keyof typeof Method = methods[method] || methods.default;\n\n    const config = params && {\n      params,\n    };\n\n    const request: <T = any, R = AxiosResponse<T>>(\n      url: string,\n      data?: any,\n      config?: AxiosRequestConfig | undefined,\n    ) => Promise<R> = this.instance[currentMethod];\n\n    return request(url, config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}