{"ast":null,"code":"var _jsxFileName = \"/Users/Roman/Documents/Projects/node-test/phonebook/client/src/components/Clicker/Clicker.tsx\";\nimport React, { useState } from 'react';\nimport { StyledCounterWrap, StyledCounter } from './styledComponents';\nimport constants from './constants';\nexport const Clicker = props => {\n  const [currentCount, setCount] = useState(0);\n  const {\n    count,\n    increaseCounter,\n    decreaseCounter\n  } = props;\n  const {\n    initialCount,\n    endCount\n  } = constants;\n\n  const handleIncrease = () => {\n    increaseCounter();\n    setCount(prev => {\n      if (prev + 1 > endCount) {\n        return prev;\n      }\n\n      return prev + 1;\n    });\n  };\n\n  const handleDecrease = () => {\n    decreaseCounter();\n    setCount(prev => {\n      if (prev - 1 < initialCount) {\n        return prev;\n      }\n\n      return prev - 1;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledCounterWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(StyledCounter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"+\")), /*#__PURE__*/React.createElement(StyledCounterWrap, {\n    topPadding: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, initialCount, /*#__PURE__*/React.createElement(StyledCounter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, currentCount), endCount));\n};","map":{"version":3,"sources":["/Users/Roman/Documents/Projects/node-test/phonebook/client/src/components/Clicker/Clicker.tsx"],"names":["React","useState","StyledCounterWrap","StyledCounter","constants","Clicker","props","currentCount","setCount","count","increaseCounter","decreaseCounter","initialCount","endCount","handleIncrease","prev","handleDecrease"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,oBAAjD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAQA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAyB;AAC9C,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BP,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM;AAAEQ,IAAAA,KAAF;AAASC,IAAAA,eAAT;AAA0BC,IAAAA;AAA1B,MAA8CL,KAApD;AACA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA6BT,SAAnC;;AAEA,QAAMU,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,eAAe;AACfF,IAAAA,QAAQ,CAAEO,IAAD,IAAU;AACjB,UAAIA,IAAI,GAAG,CAAP,GAAWF,QAAf,EAAyB;AACvB,eAAOE,IAAP;AACD;;AACD,aAAOA,IAAI,GAAG,CAAd;AACD,KALO,CAAR;AAMD,GARD;;AAUA,QAAMC,cAAc,GAAG,MAAM;AAC3BL,IAAAA,eAAe;AACfH,IAAAA,QAAQ,CAAEO,IAAD,IAAU;AACjB,UAAIA,IAAI,GAAG,CAAP,GAAWH,YAAf,EAA6B;AAC3B,eAAOG,IAAP;AACD;;AACD,aAAOA,IAAI,GAAG,CAAd;AACD,KALO,CAAR;AAMD,GARD;;AAUA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBP,KAAhB,CAFF,eAGE;AAAQ,IAAA,OAAO,EAAEK,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF,eAME,oBAAC,iBAAD;AAAmB,IAAA,UAAU,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,YADH,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBL,YAAhB,CAFF,EAGGM,QAHH,CANF,CADF;AAcD,CAvCM","sourcesContent":["import React, { useState } from 'react';\n\nimport { StyledCounterWrap, StyledCounter } from './styledComponents';\n\nimport constants from './constants';\n\nexport type ClickerProps = {\n  count?: number;\n  increaseCounter: () => void;\n  decreaseCounter: () => void;\n};\n\nexport const Clicker = (props: ClickerProps) => {\n  const [currentCount, setCount] = useState(0);\n  const { count, increaseCounter, decreaseCounter } = props;\n  const { initialCount, endCount } = constants;\n\n  const handleIncrease = () => {\n    increaseCounter();\n    setCount((prev) => {\n      if (prev + 1 > endCount) {\n        return prev;\n      }\n      return prev + 1;\n    });\n  };\n\n  const handleDecrease = () => {\n    decreaseCounter();\n    setCount((prev) => {\n      if (prev - 1 < initialCount) {\n        return prev;\n      }\n      return prev - 1;\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <StyledCounterWrap>\n        <button onClick={handleDecrease}>-</button>\n        <StyledCounter>{count}</StyledCounter>\n        <button onClick={handleIncrease}>+</button>\n      </StyledCounterWrap>\n      <StyledCounterWrap topPadding={20}>\n        {initialCount}\n        <StyledCounter>{currentCount}</StyledCounter>\n        {endCount}\n      </StyledCounterWrap>\n    </React.Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}